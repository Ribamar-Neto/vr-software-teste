[project]
name = "vr-software-teste"
version = "0.1.0"
description = "Add your description here"
readme = "README.md"
requires-python = ">=3.13"
dependencies = [
    "aio-pika>=9.5.7",
    "fastapi>=0.116.1",
    "mypy>=1.17.1",
    "pydantic>=2.11.7",
    "pytest>=8.4.1",
    "pytest-asyncio>=1.1.0",
    "pytest-cov>=5.0.0",
    "ruff>=0.12.7",
    "uuid>=1.30",
    "uvicorn>=0.35.0",
]

[tool.ruff]
line-length = 100
target-version = "py313"

[tool.ruff.format]
quote-style = "single"
indent-style = "space"
skip-magic-trailing-comma = false

[tool.ruff.lint]
select = ["ALL"]
ignore = ["B008", "COM812", "D", "FBT001", "INP001", "TC001", "TC002", "TC003", "TC006","BLE001", "F841", "S105", "TRY401", "S311", "PLR2004", "TRY300"]

[tool.ruff.lint.flake8-quotes]
inline-quotes = "single"

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401",]
"tests/**" =  ["S"]

[tool.ruff.lint.pylint]
max-args = 10

[tool.coverage.run]
source = ["src"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
    "*/migrations/*",
]

[tool.coverage.report]
exclude_also = [ "NotImplementedError"]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[tool.mypy]
ignore_missing_imports = true
disallow_untyped_defs = true
exclude = ["tests"]

[tool.pytest.ini_options]
filterwarnings = [
    "ignore::DeprecationWarning",
    "ignore::SyntaxWarning",
]
asyncio_mode = "auto"
asyncio_default_fixture_loop_scope = "session"
asyncio_default_test_loop_scope = "session"
